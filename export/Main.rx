-- testing something right
require "openfl/display/Sprite"
-- testing something right
require "openfl/events/Event" -- testing something right
require "openfl/Lib"

-- require "openfl/Lib"

#if android
typedef User = {
  def age : Int
  def name : String
}
#end

---
Some random things right?
I do not found good syntax how to define what is
this. Any suggestions?
---
self class<String>
  extends Sprite
  implements Dynamic
  
private def self.appname = "My Application"
def self.instance = new self() -- New instance of self

------------------
Instance variables
------------------
def cacheTime : Float
def speed : Float
def sprite : Sprite

def struct = {
  a: "hello",
  b: "world",
  callback: do(test)
    trace("hello world")
  end,
}

def array = [
  "hello", "world",
]

-- Just multiline string
-- Yes I know Haxe supports them already
-- but this is solely for syntax highlighting purposes
def test = """
  Hello bro.
  This is new line bro.
  Okay bro.
"""

def self.getInstance()
  return self.instance -- Return instance of Main
end

-- Create a new instance of class Main
-- It is just entry point for OpenFL
public def new()
  super()

  def hell = "88Jdf"

  ---------------------------
  Print something
  ---------------------------
  trace("This is #appname")

  -- Create our super sprite
  sprite = new Sprite()
  sprite.graphics.beginFill(0x24AFC4)
  sprite.graphics.drawRect(0, 0, 100, 100)
  sprite.y = 50
  addChild(sprite)

  -- Initialize rest of things
  speed = 0.3
  cacheTime = Lib.getTimer()

  while(true) break end

  while (true)
    if (test)
      trace(hello)
    end

    break
  end

  -- Event listener magic, hell yeah
  addEventListener(Event.ENTER_FRAME, do(event)
      var currentTime = Lib.getTimer ()
      update (currentTime - cacheTime)
      cacheTime = currentTime
    end
  )

end

-- Just main loop. I love them.
private def update(deltaTime)
  if (sprite.x + sprite.width >= stage.stageWidth || sprite.x <= 0)  
    speed *= -1
  elseif (sprite.x == 5)
    testThis()
    break
  else
    testThat()
  end

  sprite.x += speed * deltaTime
end